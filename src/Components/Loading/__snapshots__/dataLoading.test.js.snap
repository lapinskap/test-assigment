// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DataLoading /> renders correctly new 1`] = `
<DataLoading
  endpoint="/company/companyData/edit"
  fetchedData={false}
  forceLoader={false}
  isMock={true}
  isNew={true}
  mockDataEndpoint="/company/companyData/edit"
  options={Object {}}
  service=""
  updateData={[Function]}
>
  <ContentLoading
    backgroundStyle={null}
    message={
      <Loader
        active={true}
        color="#545cd8"
        type="line-scale"
      />
    }
    messageStyle={
      Object {
        "position": "absolute",
        "right": "50%",
        "top": "20%",
      }
    }
    show={false}
    useBlur={true}
  >
    <Loader
      backgroundStyle={null}
      contentBlur={4}
      message={
        <Loader
          active={true}
          color="#545cd8"
          type="line-scale"
        />
      }
      messageStyle={
        Object {
          "position": "absolute",
          "right": "50%",
          "top": "20%",
        }
      }
      priority={0}
      show={false}
    >
      <div
        className="Loader"
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <div
          className="Loader__content"
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <div>
            Content
          </div>
        </div>
      </div>
    </Loader>
  </ContentLoading>
</DataLoading>
`;

exports[`<DataLoading /> renders correctly whith 403 error fetch 1`] = `
<DataLoading
  endpoint="/company/companyData/edit"
  fetchedData={false}
  forceLoader={false}
  isMock={false}
  isNew={false}
  mockDataEndpoint={null}
  options={Object {}}
  service=""
  updateData={[MockFunction]}
>
  <ContentLoading
    backgroundStyle={null}
    message={
      <Loader
        active={true}
        color="#545cd8"
        type="line-scale"
      />
    }
    messageStyle={
      Object {
        "position": "absolute",
        "right": "50%",
        "top": "20%",
      }
    }
    show={true}
    useBlur={true}
  >
    <Loader
      backgroundStyle={null}
      contentBlur={4}
      message={
        <Loader
          active={true}
          color="#545cd8"
          type="line-scale"
        />
      }
      messageStyle={
        Object {
          "position": "absolute",
          "right": "50%",
          "top": "20%",
        }
      }
      priority={0}
      show={true}
    >
      <div
        className="Loader"
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <div
          className="Loader__content"
          style={
            Object {
              "MozFilter": "blur(4px)",
              "OFilter": "blur(4px)",
              "WebkitFilter": "blur(4px)",
              "filter": "blur(4px)",
              "msFilter": "blur(4px)",
              "opacity": 1,
            }
          }
        >
          <div>
            Content
          </div>
        </div>
        <div
          className="Loader__background"
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0.5)",
              "display": "block",
              "height": "100%",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
              "zIndex": 10,
            }
          }
        >
          <div
            className="Loader__foreground"
            style={
              Object {
                "color": "white",
                "display": "table",
                "height": "100%",
                "textAlign": "center",
                "width": "100%",
                "zIndex": 20,
              }
            }
          >
            <div
              className="Loader__message"
              style={
                Object {
                  "display": "table-cell",
                  "position": "absolute",
                  "right": "50%",
                  "top": "20%",
                  "verticalAlign": "middle",
                }
              }
            >
              <Loader
                active={true}
                color="#545cd8"
                type="line-scale"
              >
                <div
                  className="loader loader-undefined loader-active"
                >
                  <div
                    className="loader-inner line-scale"
                  >
                    <div
                      key="0"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="1"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="2"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="3"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="4"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                  </div>
                </div>
              </Loader>
            </div>
          </div>
        </div>
      </div>
    </Loader>
  </ContentLoading>
</DataLoading>
`;

exports[`<DataLoading /> renders correctly whith 500 error fetch 1`] = `
<DataLoading
  endpoint="/company/companyData/edit"
  fetchedData={false}
  forceLoader={false}
  isMock={false}
  isNew={false}
  mockDataEndpoint={null}
  options={Object {}}
  service=""
  updateData={[MockFunction]}
>
  <ContentLoading
    backgroundStyle={null}
    message={
      <Loader
        active={true}
        color="#545cd8"
        type="line-scale"
      />
    }
    messageStyle={
      Object {
        "position": "absolute",
        "right": "50%",
        "top": "20%",
      }
    }
    show={true}
    useBlur={true}
  >
    <Loader
      backgroundStyle={null}
      contentBlur={4}
      message={
        <Loader
          active={true}
          color="#545cd8"
          type="line-scale"
        />
      }
      messageStyle={
        Object {
          "position": "absolute",
          "right": "50%",
          "top": "20%",
        }
      }
      priority={0}
      show={true}
    >
      <div
        className="Loader"
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <div
          className="Loader__content"
          style={
            Object {
              "MozFilter": "blur(4px)",
              "OFilter": "blur(4px)",
              "WebkitFilter": "blur(4px)",
              "filter": "blur(4px)",
              "msFilter": "blur(4px)",
              "opacity": 1,
            }
          }
        >
          <div>
            Content
          </div>
        </div>
        <div
          className="Loader__background"
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0.5)",
              "display": "block",
              "height": "100%",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
              "zIndex": 10,
            }
          }
        >
          <div
            className="Loader__foreground"
            style={
              Object {
                "color": "white",
                "display": "table",
                "height": "100%",
                "textAlign": "center",
                "width": "100%",
                "zIndex": 20,
              }
            }
          >
            <div
              className="Loader__message"
              style={
                Object {
                  "display": "table-cell",
                  "position": "absolute",
                  "right": "50%",
                  "top": "20%",
                  "verticalAlign": "middle",
                }
              }
            >
              <Loader
                active={true}
                color="#545cd8"
                type="line-scale"
              >
                <div
                  className="loader loader-undefined loader-active"
                >
                  <div
                    className="loader-inner line-scale"
                  >
                    <div
                      key="0"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="1"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="2"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="3"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                    <div
                      key="4"
                      style={
                        Object {
                          "backgroundColor": "#545cd8",
                        }
                      }
                    />
                  </div>
                </div>
              </Loader>
            </div>
          </div>
        </div>
      </div>
    </Loader>
  </ContentLoading>
</DataLoading>
`;

exports[`<DataLoading /> renders correctly with mocks 1`] = `
<Component>
  <DataLoading
    endpoint="/company/companyData/edit"
    fetchedData={true}
    forceLoader={false}
    isMock={true}
    isNew={false}
    mockDataEndpoint="/company/companyData/edit"
    options={Object {}}
    service=""
    updateData={[Function]}
  >
    <ContentLoading
      backgroundStyle={null}
      message={
        <Loader
          active={true}
          color="#545cd8"
          type="line-scale"
        />
      }
      messageStyle={
        Object {
          "position": "absolute",
          "right": "50%",
          "top": "20%",
        }
      }
      show={false}
      useBlur={true}
    >
      <Loader
        backgroundStyle={null}
        contentBlur={4}
        message={
          <Loader
            active={true}
            color="#545cd8"
            type="line-scale"
          />
        }
        messageStyle={
          Object {
            "position": "absolute",
            "right": "50%",
            "top": "20%",
          }
        }
        priority={0}
        show={false}
      >
        <div
          className="Loader"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="Loader__content"
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <div>
              Content
            </div>
          </div>
        </div>
      </Loader>
    </ContentLoading>
  </DataLoading>
</Component>
`;
